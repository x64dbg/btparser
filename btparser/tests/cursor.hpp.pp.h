struct TTD::Replay::ICursor
{
    virtual struct TTD::Replay::MemoryRange QueryMemoryRange(enum Nirvana::GuestAddress, enum TTD::Replay::QueryMemoryPolicy) const = 0;
    virtual struct TTD::Replay::MemoryBuffer QueryMemoryBuffer(enum Nirvana::GuestAddress, struct TTD::TBufferViewT, enum TTD::Replay::QueryMemoryPolicy) const = 0;
    virtual struct TTD::Replay::MemoryBufferWithRanges QueryMemoryBufferWithRanges(enum Nirvana::GuestAddress, struct TTD::TBufferViewT, uint64_t, struct TTD::Replay::MemoryRange *, enum TTD::Replay::QueryMemoryPolicy) const = 0;
    virtual void SetDefaultMemoryPolicy(enum TTD::Replay::QueryMemoryPolicy) = 0;
    virtual enum TTD::Replay::QueryMemoryPolicy GetDefaultMemoryPolicy() const = 0;
    virtual void * UnsafeGetReplayEngine(struct _GUID const &) const = 0;
    virtual void const * UnsafeAsInterface(struct _GUID const &) const = 0;
    virtual void * UnsafeAsInterface(struct _GUID const &) = 0;
    virtual struct TTD::Replay::ThreadInfo const & GetThreadInfo(enum TTD::ThreadId) const = 0;
    virtual enum Nirvana::GuestAddress GetTebAddress(enum TTD::ThreadId) const = 0;
    virtual struct TTD::Replay::Position const & GetPosition(enum TTD::ThreadId) const = 0;
    virtual struct TTD::Replay::Position const & GetPreviousPosition(enum TTD::ThreadId) const = 0;
    virtual enum Nirvana::GuestAddress GetProgramCounter(enum TTD::ThreadId) const = 0;
    virtual enum Nirvana::GuestAddress GetStackPointer(enum TTD::ThreadId) const = 0;
    virtual enum Nirvana::GuestAddress GetFramePointer(enum TTD::ThreadId) const = 0;
    virtual uint64_t GetBasicReturnValue(enum TTD::ThreadId) const = 0;
    virtual union TTD::Replay::RegisterContext GetCrossPlatformContext(enum TTD::ThreadId) const = 0;
    virtual union TTD::Replay::ExtendedRegisterContext GetAvxExtendedContext(enum TTD::ThreadId) const = 0;
    virtual uint64_t GetModuleCount() const = 0;
    virtual struct TTD::Replay::ModuleInstance const * GetModuleList() const = 0;
    virtual uint64_t GetThreadCount() const = 0;
    virtual struct TTD::Replay::ActiveThreadInfo const * GetThreadList() const = 0;
    virtual void SetEventMask(enum TTD::Replay::EventMask) = 0;
    virtual enum TTD::Replay::EventMask GetEventMask() const = 0;
    virtual void SetGapKindMask(enum TTD::Replay::GapKindMask) = 0;
    virtual enum TTD::Replay::GapKindMask GetGapKindMask() const = 0;
    virtual void SetGapEventMask(enum TTD::Replay::GapEventMask) = 0;
    virtual enum TTD::Replay::GapEventMask GetGapEventMask() const = 0;
    virtual void SetExceptionMask(enum TTD::Replay::ExceptionMask) = 0;
    virtual enum TTD::Replay::ExceptionMask GetExceptionMask() const = 0;
    virtual void SetReplayFlags(enum TTD::Replay::ReplayFlags) = 0;
    virtual enum TTD::Replay::ReplayFlags GetReplayFlags() const = 0;
    virtual bool AddMemoryWatchpoint(struct TTD::Replay::MemoryWatchpointData const &) = 0;
    virtual bool RemoveMemoryWatchpoint(struct TTD::Replay::MemoryWatchpointData const &) = 0;
    virtual bool AddPositionWatchpoint(struct TTD::Replay::PositionWatchpointData const &) = 0;
    virtual bool RemovePositionWatchpoint(struct TTD::Replay::PositionWatchpointData const &) = 0;
    virtual void Clear() = 0;
    virtual void SetPosition(struct TTD::Replay::Position const &) = 0;
    virtual void SetPositionOnThread(enum TTD::Replay::UniqueThreadId, struct TTD::Replay::Position const &) = 0;
    virtual void SetMemoryWatchpointCallback(bool (*const)(uint64_t, struct TTD::Replay::ICursorView::MemoryWatchpointResult const &, class TTD::Replay::IThreadView const *), uint64_t) = 0;
    virtual void SetPositionWatchpointCallback(bool (*const)(uint64_t, struct TTD::Replay::Position const &, class TTD::Replay::IThreadView const *), uint64_t) = 0;
    virtual void SetGapEventCallback(bool (*const)(uint64_t, enum TTD::Replay::GapKind, enum TTD::Replay::GapEventType, class TTD::Replay::IThreadView const *), uint64_t) = 0;
    virtual void SetThreadContinuityBreakCallback(void (*const)(uint64_t), uint64_t) = 0;
    virtual void SetReplayProgressCallback(void (*const)(uint64_t, struct TTD::Replay::Position const &), uint64_t) = 0;
    virtual void SetFallbackCallback(void (*const)(uint64_t, bool, enum Nirvana::GuestAddress, uint64_t, class TTD::Replay::IThreadView const *), uint64_t) = 0;
    virtual void SetCallReturnCallback(void (*const)(uint64_t, enum Nirvana::GuestAddress, enum Nirvana::GuestAddress, class TTD::Replay::IThreadView const *), uint64_t) = 0;
    virtual void SetIndirectJumpCallback(void (*const)(uint64_t, enum Nirvana::GuestAddress, class TTD::Replay::IThreadView const *), uint64_t) = 0;
    virtual void SetRegisterChangedCallback(void (*const)(uint64_t, unsigned char, void const *, void const *, uint64_t, class TTD::Replay::IThreadView const *), uint64_t) = 0;
    virtual struct TTD::Replay::ICursorView::ReplayResult ReplayForward(struct TTD::Replay::Position, enum TTD::Replay::StepCount) = 0;
    virtual struct TTD::Replay::ICursorView::ReplayResult ReplayBackward(struct TTD::Replay::Position, enum TTD::Replay::StepCount) = 0;
    virtual void InterruptReplay() = 0;
    virtual class TTD::Replay::ICursorInternals * GetInternals() = 0;
    virtual class TTD::Replay::ICursorInternals const * GetInternals() const = 0;
    virtual uint64_t GetInternalData(enum TTD::Replay::ICursorView::InternalDataId, void *, uint64_t) const = 0;
    virtual ~ICursor() = 0;
    virtual void Destroy() = 0;
};
